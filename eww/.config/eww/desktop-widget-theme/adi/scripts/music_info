#!/bin/bash

COVER="/tmp/.music_cover.jpg"
FALLBACK_COVER="$HOME/.config/eww/images/music.png"

# Functions
get_status() {
	if playerctl status 2>/dev/null | grep -q "Playing"; then
		echo ""
	else
		echo "喇"
	fi
}

get_song() {
	song=$(playerctl metadata title 2>/dev/null)
	echo "${song:-Offline}"
}

get_artist() {
	artist=$(playerctl metadata artist 2>/dev/null)
	echo "${artist:-Offline}"
}

get_time() {
	pos=$(playerctl position 2>/dev/null | cut -d. -f1)
	length=$(playerctl metadata mpris:length 2>/dev/null)
	length_sec=$((length / 1000000))

	if [[ -z "$pos" || -z "$length_sec" || "$length_sec" -eq 0 ]]; then
		echo 0
	else
		echo $((pos * 100 / length_sec))
	fi
}


get_ctime() {
	pos=$(playerctl position 2>/dev/null)
	if [[ -z "$pos" ]]; then
		echo "0:00"
	else
		printf '%d:%02d\n' $((pos/60)) $((pos%60))
	fi
}

get_ttime() {
	length=$(playerctl metadata mpris:length 2>/dev/null)
	if [[ -z "$length" ]]; then
		echo "0:00"
	else
		# Convert microseconds to seconds
		length=$((length / 1000000))
		printf '%d:%02d\n' $((length/60)) $((length%60))
	fi
}

get_cover() {
	url=$(playerctl metadata mpris:artUrl 2>/dev/null)

	if [[ "$url" == file://* ]]; then
		path="${url#file://}"
		if [[ -f "$path" ]]; then
			cp "$path" "$COVER"
			echo "$COVER"
		else
			echo "$FALLBACK_COVER"
		fi
	else
		echo "$FALLBACK_COVER"
	fi
}

# Execute based on argument
case "$1" in
	--song) get_song ;;
	--artist) get_artist ;;
	--status) get_status ;;
	--time) get_time ;;
	--ctime) get_ctime ;;
	--ttime) get_ttime ;;
	--cover) get_cover ;;
	--toggle) playerctl play-pause ;;
	--next) playerctl next ;;
	--prev) playerctl previous ;;
esac
